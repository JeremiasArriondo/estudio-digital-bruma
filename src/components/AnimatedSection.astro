---
interface Props {
  className?: string;
  delay?: number;
  children: any;
}

const { className = "", delay = 0 } = Astro.props;
---

<div
  class={`opacity-0 translate-y-12 transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] will-change-transform ${className}`}
  style={`transition-delay: ${delay}s;`}
  data-animated-section
>
  <slot />
</div>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      for (const entry of entries) {
        if (entry.isIntersecting) {
          entry.target.classList.add("opacity-100", "translate-y-0");
          entry.target.classList.remove("opacity-0", "translate-y-12");
          observer.unobserve(entry.target);
        }
      }
    },
    { threshold: 0.2, rootMargin: "-100px" }
  );

  document.querySelectorAll("[data-animated-section]").forEach((el) => {
    observer.observe(el);
  });
</script>
